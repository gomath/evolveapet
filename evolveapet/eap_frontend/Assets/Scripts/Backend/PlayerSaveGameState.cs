//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;

using System.Runtime.Serialization.Formatters.Binary; 
using System.IO;
namespace EvolveAPet

{
		public class PlayerSaveGameState //A horrible disgusting hack of a class that makes a non static copy of everything in player so that it can be serialised
		{
		public string NickName { set; get; }
		public string UserName { set; get; }
		public int Points { get; set; }
		public Stable _stable{get; set;}
		public int currentDailyChallenge;
		public DateTime dailyChallengeSetDate;
		public Stable Stable { get { return _stable; } }
		public bool[,] guessedGenes; // All the genes in the animal. If the array member at [i][j] is true, that means the the jth gene on the ith chromosome has been guessed


		public PlayerSaveGameState (Player s){
			Points = s.Points;
			UserName = s.UserName;
			NickName = s.NickName;
			_stable = s.Stable;
			guessedGenes = s.guessedGenes;
			currentDailyChallenge = s.currentDailyChallenge;
			dailyChallengeSetDate = s.dailyChallengeSetDate;
		}

		public static Player loadGame(){

			BinaryFormatter bf = new BinaryFormatter ();
			PlayerSaveGameState a;
			FileStream inStream = new FileStream (Environment.CurrentDirectory + "save.sav", FileMode.Open);
			a = bf.Deserialize(inStream) as PlayerSaveGameState;
			return new Player(a);

		}

		public void saveGame(Player p){
			string path = Environment.CurrentDirectory + "save.sav";
			BinaryFormatter bf = new BinaryFormatter();
			FileStream outStream = new FileStream(path,FileMode.OpenOrCreate);
			bf.Serialize (outStream,this);
			outStream.Close();
		}

		}
}

